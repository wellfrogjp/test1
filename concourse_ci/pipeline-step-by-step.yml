resource_types:
  - name: kubernetes
    type: docker-image
    source:
      repository: zlabjp/kubernetes-resource
      tag: "1.17"

resources:
  - name: spring-boot-service
    type: git
    source:
      uri: git@github.com:robin0695/concourse-ci-cd.git
      branch: master
      icon: github
      private_key: ((git-private-key))

  - name: spring-boot-service-docker-repository
    type: docker-image
    source:
      email: ((docker-hub-email))
      username: ((docker-hub-username))
      password: ((docker-hub-password))
      repository: ((docker-hub-username))/((docker-hub-repo-name))

  - name: kubectl-res
    type: kubernetes
    source:
      kubeconfig: ((kubeconfig-file-content))

jobs:
  - name: test
    public: true
    plan:
      - get: spring-boot-service
        trigger: true
      - task: mvn-test
        config:
          platform: linux
          caches:
            - path: $HOME/.m2/repository/
          image_resource:
            type: docker-image
            source:
              repository: maven
              tag: 3.6.0-jdk-8-alpine
          inputs:
            - name: spring-boot-service
          
          run:
            path: mvn
            args:
            - -f
            - spring-boot-service/pom.xml
            - clean
            - test
  
  - name: package
    plan: 
      - get: spring-boot-service
        trigger: true
        passed: [test]
      - task: mvn-package
        config:
          platform: linux
          caches:
            - path: $HOME/.m2/repository/
          image_resource:
            type: docker-image
            source:
              repository: maven
              tag: 3.6.0-jdk-8-alpine
          inputs:
            - name: spring-boot-service
          run:
            path: mvn
            args:
            - -f
            - spring-boot-service/pom.xml
            - clean
            - package
          
          outputs:
            - name: spring-boot-service-out
              path: spring-boot-service
      - put: spring-boot-service-docker-repository
        params:
          build: spring-boot-service-out

  - name: deploy
    plan:
      - get: spring-boot-service
        trigger: true
        passed: [package]

      - put: kubectl-res
        params:
          kubectl: delete -f spring-boot-service/spring-boot-deploy.yaml
      
      - put: kubectl-res
        params:
          kubectl: apply  -f spring-boot-service/spring-boot-deploy.yaml
